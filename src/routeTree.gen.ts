/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as R404RouteImport } from './routes/$404'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as ProtectedIndexRouteImport } from './routes/_protected/index'
import { Route as ProtectedReportsIndexRouteImport } from './routes/_protected/reports/index'
import { Route as ProtectedPropertiesIndexRouteImport } from './routes/_protected/properties/index'
import { Route as ProtectedOperationsIndexRouteImport } from './routes/_protected/operations/index'
import { Route as ProtectedPropertiesPoiIndexRouteImport } from './routes/_protected/properties/poi/index'
import { Route as ProtectedAccessProtectIndexRouteImport } from './routes/_protected/access/protect/index'
import { Route as ProtectedContingencyPlanningEbasIndexRouteImport } from './routes/_protected/contingency/planning/ebas/index'
import { Route as ProtectedAccessProtectPropertiesIndexRouteImport } from './routes/_protected/access/protect/properties/index'
import { Route as ProtectedAccessProtectPropertiesPropertyIdVisitsIndexRouteImport } from './routes/_protected/access/protect/properties/$propertyId/visits/index'
import { Route as ProtectedAccessProtectPropertiesPropertyIdVisitsVisitIdRouteImport } from './routes/_protected/access/protect/properties/$propertyId/visits/$visitId'

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/$404',
  path: '/$404',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedIndexRoute = ProtectedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedReportsIndexRoute = ProtectedReportsIndexRouteImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedPropertiesIndexRoute =
  ProtectedPropertiesIndexRouteImport.update({
    id: '/properties/',
    path: '/properties/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedOperationsIndexRoute =
  ProtectedOperationsIndexRouteImport.update({
    id: '/operations/',
    path: '/operations/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedPropertiesPoiIndexRoute =
  ProtectedPropertiesPoiIndexRouteImport.update({
    id: '/properties/poi/',
    path: '/properties/poi/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedAccessProtectIndexRoute =
  ProtectedAccessProtectIndexRouteImport.update({
    id: '/access/protect/',
    path: '/access/protect/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedContingencyPlanningEbasIndexRoute =
  ProtectedContingencyPlanningEbasIndexRouteImport.update({
    id: '/contingency/planning/ebas/',
    path: '/contingency/planning/ebas/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedAccessProtectPropertiesIndexRoute =
  ProtectedAccessProtectPropertiesIndexRouteImport.update({
    id: '/access/protect/properties/',
    path: '/access/protect/properties/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedAccessProtectPropertiesPropertyIdVisitsIndexRoute =
  ProtectedAccessProtectPropertiesPropertyIdVisitsIndexRouteImport.update({
    id: '/access/protect/properties/$propertyId/visits/',
    path: '/access/protect/properties/$propertyId/visits/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedAccessProtectPropertiesPropertyIdVisitsVisitIdRoute =
  ProtectedAccessProtectPropertiesPropertyIdVisitsVisitIdRouteImport.update({
    id: '/access/protect/properties/$propertyId/visits/$visitId',
    path: '/access/protect/properties/$propertyId/visits/$visitId',
    getParentRoute: () => ProtectedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/$404': typeof R404Route
  '/': typeof ProtectedIndexRoute
  '/login': typeof LoginIndexRoute
  '/operations': typeof ProtectedOperationsIndexRoute
  '/properties': typeof ProtectedPropertiesIndexRoute
  '/reports': typeof ProtectedReportsIndexRoute
  '/access/protect': typeof ProtectedAccessProtectIndexRoute
  '/properties/poi': typeof ProtectedPropertiesPoiIndexRoute
  '/access/protect/properties': typeof ProtectedAccessProtectPropertiesIndexRoute
  '/contingency/planning/ebas': typeof ProtectedContingencyPlanningEbasIndexRoute
  '/access/protect/properties/$propertyId/visits/$visitId': typeof ProtectedAccessProtectPropertiesPropertyIdVisitsVisitIdRoute
  '/access/protect/properties/$propertyId/visits': typeof ProtectedAccessProtectPropertiesPropertyIdVisitsIndexRoute
}
export interface FileRoutesByTo {
  '/$404': typeof R404Route
  '/': typeof ProtectedIndexRoute
  '/login': typeof LoginIndexRoute
  '/operations': typeof ProtectedOperationsIndexRoute
  '/properties': typeof ProtectedPropertiesIndexRoute
  '/reports': typeof ProtectedReportsIndexRoute
  '/access/protect': typeof ProtectedAccessProtectIndexRoute
  '/properties/poi': typeof ProtectedPropertiesPoiIndexRoute
  '/access/protect/properties': typeof ProtectedAccessProtectPropertiesIndexRoute
  '/contingency/planning/ebas': typeof ProtectedContingencyPlanningEbasIndexRoute
  '/access/protect/properties/$propertyId/visits/$visitId': typeof ProtectedAccessProtectPropertiesPropertyIdVisitsVisitIdRoute
  '/access/protect/properties/$propertyId/visits': typeof ProtectedAccessProtectPropertiesPropertyIdVisitsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/$404': typeof R404Route
  '/_protected': typeof ProtectedRouteWithChildren
  '/_protected/': typeof ProtectedIndexRoute
  '/login/': typeof LoginIndexRoute
  '/_protected/operations/': typeof ProtectedOperationsIndexRoute
  '/_protected/properties/': typeof ProtectedPropertiesIndexRoute
  '/_protected/reports/': typeof ProtectedReportsIndexRoute
  '/_protected/access/protect/': typeof ProtectedAccessProtectIndexRoute
  '/_protected/properties/poi/': typeof ProtectedPropertiesPoiIndexRoute
  '/_protected/access/protect/properties/': typeof ProtectedAccessProtectPropertiesIndexRoute
  '/_protected/contingency/planning/ebas/': typeof ProtectedContingencyPlanningEbasIndexRoute
  '/_protected/access/protect/properties/$propertyId/visits/$visitId': typeof ProtectedAccessProtectPropertiesPropertyIdVisitsVisitIdRoute
  '/_protected/access/protect/properties/$propertyId/visits/': typeof ProtectedAccessProtectPropertiesPropertyIdVisitsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$404'
    | '/'
    | '/login'
    | '/operations'
    | '/properties'
    | '/reports'
    | '/access/protect'
    | '/properties/poi'
    | '/access/protect/properties'
    | '/contingency/planning/ebas'
    | '/access/protect/properties/$propertyId/visits/$visitId'
    | '/access/protect/properties/$propertyId/visits'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$404'
    | '/'
    | '/login'
    | '/operations'
    | '/properties'
    | '/reports'
    | '/access/protect'
    | '/properties/poi'
    | '/access/protect/properties'
    | '/contingency/planning/ebas'
    | '/access/protect/properties/$propertyId/visits/$visitId'
    | '/access/protect/properties/$propertyId/visits'
  id:
    | '__root__'
    | '/$404'
    | '/_protected'
    | '/_protected/'
    | '/login/'
    | '/_protected/operations/'
    | '/_protected/properties/'
    | '/_protected/reports/'
    | '/_protected/access/protect/'
    | '/_protected/properties/poi/'
    | '/_protected/access/protect/properties/'
    | '/_protected/contingency/planning/ebas/'
    | '/_protected/access/protect/properties/$propertyId/visits/$visitId'
    | '/_protected/access/protect/properties/$propertyId/visits/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  R404Route: typeof R404Route
  ProtectedRoute: typeof ProtectedRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$404': {
      id: '/$404'
      path: '/$404'
      fullPath: '/$404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/reports/': {
      id: '/_protected/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ProtectedReportsIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/properties/': {
      id: '/_protected/properties/'
      path: '/properties'
      fullPath: '/properties'
      preLoaderRoute: typeof ProtectedPropertiesIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/operations/': {
      id: '/_protected/operations/'
      path: '/operations'
      fullPath: '/operations'
      preLoaderRoute: typeof ProtectedOperationsIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/properties/poi/': {
      id: '/_protected/properties/poi/'
      path: '/properties/poi'
      fullPath: '/properties/poi'
      preLoaderRoute: typeof ProtectedPropertiesPoiIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/access/protect/': {
      id: '/_protected/access/protect/'
      path: '/access/protect'
      fullPath: '/access/protect'
      preLoaderRoute: typeof ProtectedAccessProtectIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/contingency/planning/ebas/': {
      id: '/_protected/contingency/planning/ebas/'
      path: '/contingency/planning/ebas'
      fullPath: '/contingency/planning/ebas'
      preLoaderRoute: typeof ProtectedContingencyPlanningEbasIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/access/protect/properties/': {
      id: '/_protected/access/protect/properties/'
      path: '/access/protect/properties'
      fullPath: '/access/protect/properties'
      preLoaderRoute: typeof ProtectedAccessProtectPropertiesIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/access/protect/properties/$propertyId/visits/': {
      id: '/_protected/access/protect/properties/$propertyId/visits/'
      path: '/access/protect/properties/$propertyId/visits'
      fullPath: '/access/protect/properties/$propertyId/visits'
      preLoaderRoute: typeof ProtectedAccessProtectPropertiesPropertyIdVisitsIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/access/protect/properties/$propertyId/visits/$visitId': {
      id: '/_protected/access/protect/properties/$propertyId/visits/$visitId'
      path: '/access/protect/properties/$propertyId/visits/$visitId'
      fullPath: '/access/protect/properties/$propertyId/visits/$visitId'
      preLoaderRoute: typeof ProtectedAccessProtectPropertiesPropertyIdVisitsVisitIdRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface ProtectedRouteChildren {
  ProtectedIndexRoute: typeof ProtectedIndexRoute
  ProtectedOperationsIndexRoute: typeof ProtectedOperationsIndexRoute
  ProtectedPropertiesIndexRoute: typeof ProtectedPropertiesIndexRoute
  ProtectedReportsIndexRoute: typeof ProtectedReportsIndexRoute
  ProtectedAccessProtectIndexRoute: typeof ProtectedAccessProtectIndexRoute
  ProtectedPropertiesPoiIndexRoute: typeof ProtectedPropertiesPoiIndexRoute
  ProtectedAccessProtectPropertiesIndexRoute: typeof ProtectedAccessProtectPropertiesIndexRoute
  ProtectedContingencyPlanningEbasIndexRoute: typeof ProtectedContingencyPlanningEbasIndexRoute
  ProtectedAccessProtectPropertiesPropertyIdVisitsVisitIdRoute: typeof ProtectedAccessProtectPropertiesPropertyIdVisitsVisitIdRoute
  ProtectedAccessProtectPropertiesPropertyIdVisitsIndexRoute: typeof ProtectedAccessProtectPropertiesPropertyIdVisitsIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedIndexRoute: ProtectedIndexRoute,
  ProtectedOperationsIndexRoute: ProtectedOperationsIndexRoute,
  ProtectedPropertiesIndexRoute: ProtectedPropertiesIndexRoute,
  ProtectedReportsIndexRoute: ProtectedReportsIndexRoute,
  ProtectedAccessProtectIndexRoute: ProtectedAccessProtectIndexRoute,
  ProtectedPropertiesPoiIndexRoute: ProtectedPropertiesPoiIndexRoute,
  ProtectedAccessProtectPropertiesIndexRoute:
    ProtectedAccessProtectPropertiesIndexRoute,
  ProtectedContingencyPlanningEbasIndexRoute:
    ProtectedContingencyPlanningEbasIndexRoute,
  ProtectedAccessProtectPropertiesPropertyIdVisitsVisitIdRoute:
    ProtectedAccessProtectPropertiesPropertyIdVisitsVisitIdRoute,
  ProtectedAccessProtectPropertiesPropertyIdVisitsIndexRoute:
    ProtectedAccessProtectPropertiesPropertyIdVisitsIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  R404Route: R404Route,
  ProtectedRoute: ProtectedRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
